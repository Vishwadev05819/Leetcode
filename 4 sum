class Solution {
  public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(nums); // O(nlogn)
        int n = nums.length;
        if (n < 4) return res;
        int i = 0;
        int r = nums.length - 1;

        while (i < r - 2) {
            while (r > i + 2) {
                if (i != 0 && nums[i] == nums[i-1]){
                    i++; continue;
                }
                if (r != nums.length - 1 && nums[r] == nums[r+1]) {
                    r--; continue;
                }

                int j = i + 1, k = r - 1;
                int sum = 0;

                while (j < k) {
                    if (j != i + 1 && nums[j] == nums[j-1]){
                        j++; continue;
                    }
                    if (k != r - 1 && nums[k] == nums[k+1]) {
                        k--;
                        continue;
                    }

                    sum = nums[i] + nums[j] + nums[k] + nums[r];

                    if (sum == target) {
                        res.add(Arrays.asList(nums[i], nums[j++], nums[k--], nums[r]));
                    }
                    else if (sum < target) {
                        j++;
                    }
                    else
                        k--;
                }
                r--;
            }
            r = nums.length - 1;
            i++;
        }
        return res;
    }
}
